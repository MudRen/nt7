// Filename : /cmds/std/imbibe.c
// Last Modified by winder on Aug. 5 2001

#include <ansi.h>
inherit F_CLEAN_UP;

int main(object me, string arg)
{
        object *obj, pet;
        string owner;
        int i, j, lvl;

        seteuid(getuid());

        if(!arg || arg == " ")
                return notify_fail("你要给谁喂水？\n");
        if(!objectp(pet = present(arg, environment(me))) || !living(pet))
                return notify_fail("这里没有这动物。\n");
        if( query("race", pet) == "人类" )
                return notify_fail(pet->name()+"是宠物么？瞪大眼睛看看！\n");
        if(pet->is_busy() )
                return notify_fail(pet->name()+"正忙着呢，哪喝得下什么！\n");
        if(me->is_busy() )
                return notify_fail("你正忙着呢，什么也做不了！\n");
        if(pet->is_fighting() )
                return notify_fail("你没看道它正在打架吗？！\n");
        if(me->is_fighting() )
                return notify_fail("一边打架一边喂水？你真是活腻了！\n");
        if( query("id", me) != query_temp("owner", pet) )
                return notify_fail("你不是"+query("name", pet)+"的主人，人家不会理你的。\n");
        if( query("water", pet) >= pet->max_water_capacity() )
                return notify_fail(pet->name()+"已经喝得太多了，再也灌不下任何东西了。\n");

        me->start_busy(1);
        if( query("resource/water", environment(me)) )
        {
                if( query("drink_msg", pet) )
                        message_vision(query("drink_msg", pet),pet);
                else message_vision("$N伸长舌头舔了舔水面，一仰脖颈，喝了下去。\n", pet);
                addn("water", 30, pet);
        }
        else
        {
                obj = all_inventory(environment(me));
                for (i = 0; i < sizeof(obj); i++)
                {
                        if( query("liquid/remaining", obj[i]) )
                        {
                                break;
                        }
                }
                if( i == sizeof(obj) )
                        return notify_fail("这里没啥东西可以给"+pet->name()+"喂水。\n");
// 宠物饮水状态改变。
                addn("water", 10+query("liquid/drunk_apply", obj[i]), pet);
// 容器容量改变。
                addn("liquid/remaining", -1, obj[i]);
// 吃的不busy，喂的busy，feed.c也一样。
                if( query("liquid/busy", obj[i]) )
                        me->start_busy(query("liquid/busy", obj[i]));
                if( query("liquid/remaining", obj[i]) )
                        message_vision("$N伸长脖颈对着$n，唏唏嗦嗦地喝了几口"+query("liquid/name", obj[i])+"。\n",pet,obj[i]);
                else
                        message_vision("$N伸长脖颈对着$n，唏唏嗦嗦就把"+query("liquid/name", obj[i])+"喝了个精光。\n",pet,obj[i]);
// 喝到毒药啦。
                if( query("liquid/poisontime", obj[i])>1 )
                {
                        pet->apply_condition(query("liquid/poison", obj[i]), query("liquid/poisontime", obj) );
                        write(query("name", pet)+"突然觉得很难受地扭着腰挣扎了两下，好象喝的东西有点不对劲。\n");
                }
// 喝到酒啦。
                switch(query("liquid/type", obj[i]) )
                {
                        case"alcohol":pet->apply_condition("drunk",pet->query_condition("drunk")+query("liquid/drunk_apply", obj[i]));
                                        break;
                }
        }

// 宠物升级，与驯兽无关。
        if( query("owner", pet) == query("id", me) )
        {
// 食物作用改变，累计以便升级。
                addn("feed", 1, pet);
                i=query("feed", pet);
                j=query("level", pet);
                if(i>=2+j*j)
                {
                        tell_object(me,HIY"你喂了这一次饮水后，发觉"+query("name", pet)+"似乎更听话了！\n"NOR);
// 喂养长级别。
                        addn("level", 1, pet);
                        set("feed", 0, pet);
// 喂养长驯服度。
                        addn("obe", 1, pet);
                        lvl=query("level", pet);
                }
                addn("max_qi", lvl, pet);
                addn("max_jing", lvl, pet);
        }

        return 1;
}

int help(object me)
{
        write(@HELP
指令格式 : imbibe <动物>

    此指令可用于喂养你所驯服的动物。

    对于已经驯服的动物，可以进行下述指令：

基本指令：
        come <动物名>:                  让动物跟随主人行动。
        stay:                           停止动物的跟随状态。
        attack <某物>:                  让动物攻击敌人。
        stop <动物名>:                  让动物停止对人的攻击。
        release:                        结束主奴状态，将动物放离。

特殊指令：（只对某些动物适用）
        ride <动物名>:                  骑，如骑马，虎，雕，鲨等。
        unride <动物名>:                下，离开坐骑。
        feed <饲料> to <动物名>:        替动物喂食。
        imbibe <动物名>:                给动物饮水。

HELP
        );
        return 1;
}
